import streamlit as st
import pandas as pd
import plotly.express as px
from st_aggrid import AgGrid
from st_aggrid.grid_options_builder import GridOptionsBuilder

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
st.markdown("""
### ‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º?
–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.  
–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä:  
üìå *"–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–∞–º –∏ —Ç–æ–≤–∞—Ä–∞–º –∑–∞ —è–Ω–≤–∞—Ä—å –≤ —à—Ç—É–∫–∞—Ö –∏ –¥–µ–Ω—å–≥–∞—Ö"*  
–∏ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤—ã–¥–∞—Å—Ç –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.  
üîπ **–í–∞–º –Ω–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª—è—Ö** ‚Äî –ø—Ä–æ—Å—Ç–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º.
""")

st.subheader("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ")

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞
user_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:", "")

if st.button("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"):
    if user_input:
        with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç... ‚è≥"):
            try:
                # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –≤–µ–±—Ö—É–∫–∞
                result = {
                    "data": [
                        {
                            "–î–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä": "DS-Turkey-Adana",
                            "–û–±–æ—Ä–æ—Ç –≤ —à—Ç—É–∫–∞—Ö": 80739,
                            "–û–±–æ—Ä–æ—Ç –≤ –≥—Ä–æ—à–∞—Ö –¥–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä–∞": 602461820
                        },
                        {
                            "–î–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä": "DS-Turkey-Ankara",
                            "–û–±–æ—Ä–æ—Ç –≤ —à—Ç—É–∫–∞—Ö": 15500,
                            "–û–±–æ—Ä–æ—Ç –≤ –≥—Ä–æ—à–∞—Ö –¥–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä–∞": 151002701
                        },
                        {
                            "–î–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä": "DS-Turkey-Aydin",
                            "–û–±–æ—Ä–æ—Ç –≤ —à—Ç—É–∫–∞—Ö": 13156,
                            "–û–±–æ—Ä–æ—Ç –≤ –≥—Ä–æ—à–∞—Ö –¥–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä–∞": 114514466
                        },
                        {
                            "–î–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä": "DS-Turkey-Batman",
                            "–û–±–æ—Ä–æ—Ç –≤ —à—Ç—É–∫–∞—Ö": 83480,
                            "–û–±–æ—Ä–æ—Ç –≤ –≥—Ä–æ—à–∞—Ö –¥–∏—Å—Ç—Ä–∏–±'—é—Ç–æ—Ä–∞": 685734988
                        }
                    ]
                }

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
                if "data" in result and isinstance(result["data"], list):
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ DataFrame
                    df = pd.DataFrame(result["data"])

                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏
                    numeric_columns = df.select_dtypes(include=["number"]).columns

                    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–π —á–∏—Å–ª–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ
                    if len(numeric_columns) > 0:
                        df = df.sort_values(by=numeric_columns[0], ascending=False)

                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                    total_row = {col: df[col].sum() if col in numeric_columns else "–ò—Ç–æ–≥–æ" for col in df.columns}

                    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º AgGrid –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    gb = GridOptionsBuilder.from_dataframe(df)
                    gb.configure_pagination(paginationAutoPageSize=True)
                    gb.configure_default_column(editable=False, groupable=True, sortable=True)

                    gridOptions = gb.build()
                    gridOptions["suppressAggFuncInHeader"] = True
                    gridOptions["pinnedBottomRowData"] = [total_row]

                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                    st.subheader("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞")
                    AgGrid(df, gridOptions=gridOptions, height=500, theme="streamlit")

                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
                    st.subheader("üìà –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏")
                    selected_metric = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞:", numeric_columns)
                    fig = px.bar(
                        df[:-1],  # –ò—Å–∫–ª—é—á–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                        x=df.columns[0],
                        y=selected_metric,
                        labels={df.columns[0]: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", selected_metric: "–ó–Ω–∞—á–µ–Ω–∏—è"},
                        title=f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ {selected_metric}",
                        text_auto=True,
                    )
                    st.plotly_chart(fig, use_container_width=True)
                else:
                    st.warning("–û—à–∏–±–∫–∞: Webhook –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
            except Exception as e:
                st.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    else:
        st.warning("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!")
