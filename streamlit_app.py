import streamlit as st
import requests

# URL n8n Webhook
N8N_WEBHOOK_URL = "https://spot2d.app.n8n.cloud/webhook-test/93ad63a0-8bab-4cf1-b446-f71ae3f988fa"

st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞")
st.subheader("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ")

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
user_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:", "")

if st.button("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"):
    if user_input:
        with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç... ‚è≥"):
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ Webhook
                response = requests.post(N8N_WEBHOOK_URL, json={"query": user_input})
                response.raise_for_status()

                # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result = response.json()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
                if len(result) > 0 and "message" in result[0]:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message = result[0]["message"]

                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
                    st.subheader("üìÑ –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç")
                    st.text(message)

                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Markdown –≤ —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    if "--- | ---" in message:
                        st.subheader("üìä –¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥")
                        table_data = [
                            row.split(" | ")
                            for row in message.split("\n")
                            if " | " in row
                        ]
                        table_header = table_data[0]
                        table_rows = table_data[1:]
                        
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
                        st.table([dict(zip(table_header, row)) for row in table_rows])
                else:
                    st.warning("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –≤–µ–±—Ö—É–∫–∞.")
            except requests.exceptions.RequestException as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ n8n: {str(e)}")
    else:
        st.warning("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å!")
